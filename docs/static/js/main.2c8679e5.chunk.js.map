{"version":3,"sources":["actions/unsplash.ts","Components/gridItem/GridItem.tsx","configs/dev.config.ts","api/unsplash.ts","Components/input/Input.tsx","Components/button/Button.tsx","Components/searchForm/SearchForm.tsx","Components/radio/Radio.tsx","App.tsx","actions/submit.ts","actions/filter.ts","Components/grid/Grid.tsx","Components/image/Image.tsx","actions/image.ts","Components/nav/Nav.tsx","reducers/unsplash.ts","reducers/index.ts","index.tsx","img/search-img.png","img/sort-amount-asc.svg","img/sort-amount-desc.svg"],"names":["ActionTypes","GridItem","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","props","url","description","likes","link","classN","className","height","id","titleStyle","concat","react_default","a","createElement","href","style","src","alt","React","Component","config","options","axios","create","baseURL","headers","Authorization","getImages","_ref","asyncToGenerator","regenerator_default","mark","_callee","searchInput","currentPage","axiosConfig","response","_response$data","total","totalPages","items","wrap","_context","prev","next","params","query","page","get","sent","data","total_pages","results","abrupt","stop","_x","_x2","unsplash","Unsplash","applicationId","secret","getImage","_ref2","_callee2","imageId","result","res","_context2","photos","getPhoto","json","console","log","_x3","InputTypes","Button","children","classNames","objectWithoutProperties","classes","classnames","assign","Sort","Input","name","label","type","react","autoComplete","onFocus","e","currentTarget","Radio","defaultChecked","htmlFor","ButtonTypes","SearchForm","state","filterInput","radioInput","ASC","onFormChange","onChange","_this","_this$state","nextSearchInput","Array","from","elements","filter","element","reduce","acc","cur","checked","objectSpread","defineProperty","setState","onSubmit","preventDefault","Input_Input","TEXT","Button_Button","SUBMIT","search","Radio_Radio","RADIO","desc","asc","SearchFormWrapper","connect","dispatch","payload","FILTER","Grid","loadImages","onAddItems","filteredItems","isArray","toConsumableArray","item","alt_description","regex","RegExp","match","sortedItems","DESC","sort","b","Fragment","fallback","map","urls","GridItem_GridItem","small","length","BUTTON","onClick","PureComponent","GridWrapper","FETCH","Image","onLoad","_this$props$item","user","regular","ImageWrapper","IMAGE","Nav","Children","child","cloneElement","Notfound","routes","title","path","exact","App","Nav_Nav","route","i","react_router_dom","to","react_router","render","routeProps","component","INITIAL_STATE","combineReducers","undefined","action","composedEnhancer","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","reducers","compose","applyMiddleware","reduxThunk","ReactDOM","es","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2c8679e5.chunk.js","sourcesContent":["import {getImages} from \"../api\";\r\n\r\nexport enum ActionTypes {\r\n    FETCH = '@unsplash/fetch',\r\n    FILTER = '@unsplash/filter',\r\n    SUBMIT = '@unsplash/submit',\r\n    IMAGE = '@image/fetsh'\r\n}\r\n\r\nexport const fetchItems = (payload: {searchInput: string, currentPage: number}):any  => {\r\n    return async (dispatch:any) => {\r\n        const response = await getImages(payload.searchInput, payload.currentPage);\r\n        dispatch({\r\n            type: ActionTypes.FETCH,\r\n            payload: {...response, searchInput: payload.searchInput, currentPage: payload.currentPage}\r\n        });\r\n    };\r\n};","import React from \"react\";\r\nimport \"./GridItem.scss\";\r\n\r\ninterface IProps {\r\n    url: string,\r\n    id: string,\r\n    description: string,\r\n    likes: number,\r\n    link?: string,\r\n    height?: number,\r\n    className?: string\r\n}\r\n\r\ninterface IState {\r\n    value: string,\r\n}\r\n\r\nexport class GridItem extends React.Component<IProps, IState>{\r\n\r\n    render(){\r\n        const { url, likes, link, description, className: classN, height, id } = this.props;\r\n        const titleStyle = {\r\n            height: `${height}px`,\r\n        };\r\n\r\n        return <article className={classN}>\r\n            <a className=\"title\" href={`#/image/${id}`} style={titleStyle}>{ description }</a>\r\n            <div className=\"image\">\r\n                <img src={url} alt=\"\" />\r\n            </div>\r\n        </article>\r\n    }\r\n}","\r\nexport const config = {\r\n    baseURL: 'https://api.unsplash.com',\r\n    baseURLId: 'https://source.unsplash.com/',\r\n    baseURLId2: ' http://unplash.com/',\r\n    clientId: '995142b5e2f546f4eac828d832606dfba0beaef27d62d77a1ff8cce9ba2bacac',\r\n    secretKey: '2ba48f233f891ebb88bc9ac2b9387c2162785b57dc9ffc741bb2d518ca59c948',\r\n};\r\n","import axios from \"axios\";\r\nimport { config } from \"../configs/\"\r\nimport {SearchResponse} from \"../types/API\";\r\nconst apiUrl = '/search/photos';\r\nimport Unsplash, {toJson} from \"unsplash-js\";\r\n\r\nconst options =  axios.create({\r\n    baseURL: config.baseURL,\r\n    headers: {\r\n        'Authorization': `Client-ID ${config.clientId}`\r\n    }\r\n});\r\n\r\nconst optionsId =  axios.create({\r\n    baseURL: config.baseURLId2,\r\n    headers: {\r\n        'Authorization': `Client-ID ${config.clientId}`\r\n    }\r\n});\r\n\r\nexport const  getImages = async (searchInput:string, currentPage: number) => {\r\n    const axiosConfig = {\r\n        params: {\r\n            query: searchInput,\r\n            page: currentPage\r\n        }\r\n    };\r\n    const response =  await options.get<SearchResponse>(apiUrl, axiosConfig);\r\n    const { total, total_pages: totalPages, results: items} =  response.data;\r\n    return { total, totalPages, items};\r\n\r\n};\r\nconst unsplash = new Unsplash({\r\n    applicationId: `${config.clientId}`,\r\n    secret: `${config.secretKey}`\r\n});\r\n\r\nexport const getImage = async (imageId:string) => {\r\n    const result =   await unsplash.photos.getPhoto(imageId, 1920, 1080, [0, 0, 1920, 1080]);\r\n    const res = result.json();\r\n    console.log(\"res\", res);\r\n    return res;\r\n\r\n};\r\n\r\n\r\n","import * as React from \"react\";\r\nimport {SyntheticEvent} from \"react\";\r\nimport \"./Input.scss\";\r\n\r\nexport enum InputTypes {\r\n    TEXT = 'text',\r\n    RADIO = 'radio',\r\n    NUMBER = 'number',\r\n    PASSWORD = 'password',\r\n    PHONE = 'phone'\r\n}\r\n\r\ninterface IProps {\r\n    type: InputTypes,\r\n    value?: string,\r\n    onChange?: (value: string, name: string) => void\r\n    name: string\r\n    label: string\r\n}\r\n\r\nexport const Input: React.FunctionComponent<IProps> = ({ name, label, type }) => {\r\n\r\n    return <div className={'input__native-group'}>\r\n            <input\r\n                name={name}\r\n                type={type}\r\n                className={'input__native-input'}\r\n                autoComplete=\"off\"\r\n                onFocus={(e)=> e.currentTarget.value = ''}\r\n            />\r\n            <label className=\"input__native-label\">{label}</label>\r\n            <span className=\"input__native-highlight\">&nbsp;</span>\r\n            <span className=\"input__native-bar\">&nbsp;</span>\r\n        </div>\r\n};","import React, {ButtonHTMLAttributes} from \"react\";\r\nimport './Button.scss';\r\nimport classnames from \"classnames\";\r\nimport {ButtonTypes} from \"../../App\";\r\n\r\n\r\ninterface IProps extends  ButtonHTMLAttributes<HTMLButtonElement>{\r\n    classNames?: string,\r\n    type?: ButtonTypes\r\n}\r\n\r\nexport const Button: React.FunctionComponent<IProps> = ({ children, classNames, ...props }) => {\r\n    const classes = classnames('btn', classNames);\r\n    return <button className={ classes } {...props}>\r\n        <span>{children}</span>\r\n    </button>\r\n};","import * as React from \"react\";\r\nimport {Input, InputTypes} from \"../input\";\r\nimport {SyntheticEvent} from \"react\";\r\nimport \"./SearchForm.scss\";\r\nimport classnames from \"classnames\";\r\nimport {Button} from \"../button\";\r\nimport {ButtonTypes} from \"../../App\";\r\n// @ts-ignore\r\nimport search from \"../../img/search-img.png\";\r\n// @ts-ignore\r\nimport asc from \"../../img/sort-amount-asc.svg\";\r\n// @ts-ignore\r\nimport desc from \"../../img/sort-amount-desc.svg\";\r\nimport {Radio} from \"../radio\";\r\nimport {filterActionCreator} from \"../../actions/filter\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchInitItems} from \"../../actions/submit\";\r\n\r\nexport enum Sort {\r\n    ASC = 'asc',\r\n    DESC = 'desc'\r\n}\r\n\r\ninterface Props {\r\n    onSubmit: (searchInput: string, currentPage: number) => void;\r\n    onChange: (filterInput: string, radioInput: string) => void;\r\n    className: string;\r\n    searchInput: string;\r\n}\r\n\r\ninterface State {\r\n    searchInput: string;\r\n    filterInput: string;\r\n    radioInput: string;\r\n}\r\n\r\n\r\nclass SearchForm extends React.Component<Props, State>{\r\n    state = {\r\n        searchInput: '',\r\n        filterInput: '',\r\n        radioInput: Sort.ASC\r\n    };\r\n\r\n    private onFormChange = (e: SyntheticEvent<HTMLFormElement>) => {\r\n        const { onChange } = this.props;\r\n        const { searchInput, radioInput } = this.state;\r\n        const nextSearchInput = e.currentTarget['searchInput'].value;\r\n\r\n        const inputs = Array.from(e.currentTarget.elements).filter((element:any) => {\r\n            if(element && element['name']){\r\n                return element['name'];\r\n            }\r\n            return null;\r\n        });\r\n\r\n        const value = inputs.reduce((acc:object, cur:any) => {\r\n            if(cur.name){\r\n                if(cur.name === 'radioInput'){\r\n                    if(cur.checked === true){\r\n                        return {...acc, [cur.name]: cur.id};\r\n                    }\r\n                    return acc;\r\n                }else{\r\n                    return {...acc, [cur.name]: cur.value};\r\n                }\r\n            }\r\n            return acc;\r\n        }, {});\r\n\r\n        this.setState(state => ({...state, ...value}), () => {\r\n            if(nextSearchInput === searchInput){\r\n                onChange(this.state.filterInput, radioInput);\r\n            }\r\n        });\r\n    };\r\n\r\n    private onSubmit = (e: SyntheticEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const {searchInput} = this.state;\r\n        if(this.props.searchInput !== searchInput){\r\n            this.props.onSubmit(searchInput, 1);\r\n        }\r\n    };\r\n\r\n    render(){\r\n        const classNames = classnames('search-form', 'native-form');\r\n        return <form onSubmit={this.onSubmit}  className={classNames} onChange={this.onFormChange} >\r\n                <div className={'search'}>\r\n                    <Input\r\n                        name={'searchInput'}\r\n                        type = {InputTypes.TEXT}\r\n                        label = {'Search'}\r\n                    />\r\n                    <Button type={ButtonTypes.SUBMIT} classNames={'btn-search'} > <img src={search} alt=\"Search\" className={'icon-search'} /></Button>\r\n                </div>\r\n                <Input\r\n                    name={'filterInput'}\r\n                    type = {InputTypes.TEXT}\r\n                    label = {'Filter'}\r\n                />\r\n                <div className={'search'}>\r\n                    <Radio\r\n                        id={'desc'}\r\n                        name={'radioInput'}\r\n                        defaultChecked={true}\r\n                        type = {InputTypes.RADIO}\r\n                        label = {<img src={desc} />}\r\n                    />\r\n                    <Radio\r\n                        id={'asc'}\r\n                        name={'radioInput'}\r\n                        type = {InputTypes.RADIO}\r\n                        label = {<img src={asc} />}\r\n                    />\r\n                </div>\r\n            </form>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        searchInput: state.unsplash.searchInput\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        onSubmit: (searchInput: string, currentPage: number) => {\r\n           dispatch(fetchInitItems( {searchInput, currentPage}))\r\n        },\r\n        onChange: (filterInput: string, radioInput: string) => {\r\n            dispatch(filterActionCreator({filterInput, radioInput}))\r\n        }\r\n    }\r\n};\r\n\r\nconst SearchFormWrapper = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SearchForm);\r\n\r\nexport {SearchFormWrapper as SearchForm};","import * as React from \"react\";\r\nimport \"./Radio.scss\";\r\nimport {InputTypes} from \"../input\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\ninterface IProps {\r\n    type: InputTypes,\r\n    value?: string,\r\n    onChange?: (value: string, name: string) => void\r\n    name?: string\r\n    label?: any\r\n    id?: string\r\n    defaultChecked?: boolean\r\n}\r\n\r\nexport const Radio: React.FunctionComponent<IProps> = ({ name, label, type, id, defaultChecked }) => {\r\n    const classNames = classnames('input__native-group', 'input__native-radio', 'input__native-radio-inline')\r\n    return <div className={classNames}>\r\n                <input id={id} type={type} name={name} defaultChecked={ defaultChecked }/>\r\n                <label htmlFor={id}>{label}</label>\r\n        </div>\r\n};","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport {Grid} from \"./Components/grid\";\r\nimport { Image } from \"./Components/image\";\r\nimport {Nav} from \"./Components/nav\";\r\nimport {Route, RouteChildrenProps, Switch} from \"react-router\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport enum ButtonTypes {\r\n  SUBMIT = 'submit',\r\n  BUTTON = 'button'\r\n}\r\nconst Notfound = () => <div className={'notfound'}><h2>Not Found</h2></div>;\r\n\r\nconst routes = [\r\n  {\r\n    title: 'home',\r\n    path: '/',\r\n    exact: true,\r\n    props: {\r\n      title: ''\r\n    },\r\n    Component: Grid\r\n  },\r\n  {\r\n    title: 'about',\r\n    exact: false,\r\n    path: '/about',\r\n    Component: () => <h1>Some text</h1>\r\n  },\r\n  {\r\n    path: '/image/:id',\r\n    exact: false,\r\n    Component: (props: any) => <Image {...props}/>\r\n  },\r\n  {\r\n    title: 'Login',\r\n    exact: false,\r\n    path: '/login',\r\n    Component: () => <h1>Login component</h1>\r\n  },\r\n];\r\n\r\nclass App extends Component<{}, {}> {\r\n\r\n  render() {\r\n    return <div className={'app-wrapper'}>\r\n      <Nav>\r\n        {\r\n          routes.map((route, i) => <NavLink exact key={i} to={route.path}>{route.title}</NavLink>)\r\n        }\r\n      </Nav>\r\n      <Switch>\r\n        {\r\n          routes.map(({path, exact, Component, title, props}) =>(\r\n              <Route\r\n                key={path}\r\n                path={path}\r\n                exact={exact}\r\n                render={ (routeProps) => <Component {...props} {...routeProps} /> }\r\n              />\r\n          ))\r\n        }\r\n        <Route component={Notfound} />\r\n      </Switch>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import {getImages} from \"../api\";\r\nimport {ActionTypes} from \"./unsplash\";\r\n\r\n\r\nexport const fetchInitItems = (payload: {searchInput: string, currentPage: number}):any  => {\r\n    return async (dispatch:any) => {\r\n        const response = await getImages(payload.searchInput, payload.currentPage);\r\n        dispatch({\r\n            type: ActionTypes.SUBMIT,\r\n            payload: {...response, searchInput: payload.searchInput, currentPage: payload.currentPage}\r\n        });\r\n    };\r\n};","import {ActionTypes} from \"./unsplash\";\r\n\r\nexport const filterActionCreator = (payload: {filterInput: string, radioInput: string}):any  => {\r\n    return (dispatch:any) => {\r\n        dispatch({\r\n            type: ActionTypes.FILTER,\r\n            payload: payload\r\n        });\r\n    };\r\n};","import React, {Suspense} from \"react\";\r\nimport {Image} from '../../types/API';\r\nimport './Grid.scss';\r\nimport {GridItem} from \"../gridItem\";\r\nimport {fetchItems} from \"../../actions/unsplash\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button} from \"../button\";\r\nimport {ButtonTypes} from \"../../App\";\r\nimport {SearchForm, Sort} from \"../searchForm\";\r\nimport {array} from \"prop-types\";\r\n\r\ninterface Props {\r\n    items: Array<Image>;\r\n    total: number;\r\n    filterInput: string;\r\n    currentPage: number;\r\n    searchInput: string;\r\n    radioInput: string;\r\n    onAddItems: (searchInput: string, currentPage: number)=> void;\r\n}\r\n\r\nclass Grid extends React.PureComponent<Props, {}> {\r\n\r\n    private loadImages = () => {\r\n        const currentPage = this.props.currentPage + 1;\r\n        this.props.onAddItems(this.props.searchInput, currentPage)\r\n    };\r\n\r\n    render() {\r\n        const { items, total, filterInput, radioInput} = this.props;\r\n        let filteredItems:any = [];\r\n        if(Array.isArray(items)){\r\n            filteredItems = [...items as any].filter(item => {\r\n                if (item.alt_description) {\r\n                    const regex = new RegExp(filterInput, 'gi');\r\n                    return item.alt_description.match(regex);\r\n                } else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n\r\n        const sortedItems = radioInput === Sort.DESC ? filteredItems.sort((a:any, b:any):any => b.likes - a.likes ? -1 : 1): filteredItems;\r\n\r\n        return <>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n                <div className={'nav__container'}>\r\n                    <SearchForm  className='nav__search-form'/>\r\n                </div>\r\n                <div className={'grid'}>\r\n                    {\r\n                        sortedItems.map((item: { alt_description: any; urls: any; likes: any; id: any; }) => {\r\n                            const {alt_description, urls, likes, id} = item;\r\n                            return <GridItem className={'grid__item'}\r\n                                             key={id}\r\n                                             id={id}\r\n                                             url={urls.small}\r\n                                             description={alt_description}\r\n                                             likes={likes}/>\r\n                        })\r\n                    }\r\n                </div>\r\n            </Suspense>\r\n            {items && items.length > 0 && total > items.length?\r\n                <Button className=\"native-button\" type={ButtonTypes.BUTTON} onClick={this.loadImages} >Show more {total ? `(${items.length} of ${total})` : ''}</Button>\r\n                : null\r\n            }\r\n            </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        items: state.unsplash.items,\r\n        total: state.unsplash.total,\r\n        searchInput: state.unsplash.searchInput,\r\n        filterInput: state.unsplash.filterInput,\r\n        currentPage: state.unsplash.currentPage,\r\n        radioInput: state.unsplash.radioInput,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        onAddItems: (searchInput: string, currentPage: number) => {\r\n            dispatch(fetchItems( {searchInput, currentPage}))\r\n        }\r\n    }\r\n};\r\n\r\nconst GridWrapper = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Grid);\r\n\r\nexport {GridWrapper as Grid};\r\n\r\n","import React, {Suspense} from \"react\";\r\nimport \"./Image.scss\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchImage} from \"../../actions/image\";\r\n\r\ninterface IProps {\r\n    item: any,\r\n    match: any,\r\n    onLoad: (id: string) => void\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nclass Image extends React.Component<IProps, {}>{\r\n    componentDidMount(){\r\n        this.props.onLoad(this.props.match.params.id);\r\n    }\r\n    render(){\r\n        const {alt_description, user, urls} = this.props.item;\r\n        return <Suspense fallback={<div>Loading...</div>}>\r\n            <article >\r\n                <div className=\"info\">\r\n                    <h2>{name}</h2>\r\n                    <h4>{alt_description}</h4>\r\n                    <i>{user?user.name:null}</i>\r\n                    <img src={urls?urls.regular:null} alt=\"\" />\r\n                </div>\r\n            </article>\r\n        </Suspense>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        item: state.unsplash.item\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        onLoad: (imageId: string) => {\r\n            dispatch(fetchImage( {imageId}))\r\n        },\r\n    }\r\n};\r\n\r\nconst ImageWrapper = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Image);\r\n\r\nexport {ImageWrapper as Image};","import { getImage } from \"../api\";\r\nimport { ActionTypes } from \"./unsplash\";\r\n\r\n\r\nexport const fetchImage = (payload: {imageId: string}):any  => {\r\n    return async (dispatch:any) => {\r\n        const response = await getImage(payload.imageId);\r\n        console.log(\"response\", response);\r\n        dispatch({\r\n            type: ActionTypes.IMAGE,\r\n            payload: {...response}\r\n        });\r\n    };\r\n};","import React, {ReactNode} from \"react\";\r\nimport './Nav.scss';\r\nimport { SearchForm } from \"../searchForm\";\r\n\r\nexport const Nav: React.FunctionComponent<any> = ({children}) => {\r\n\r\n    return <nav className={'nav'}>\r\n        <ul className={'nav-menu'}>\r\n            {React.Children.map<ReactNode, any>(children,(child:any) => {\r\n                return <li key={child.props.children}>{React.cloneElement(child)}</li>\r\n            }\r\n            )}\r\n        </ul>\r\n\r\n\r\n        </nav>;\r\n};","import {Action} from \"../types/action\";\r\nimport {ActionTypes} from \"../actions/unsplash\";\r\nimport {Image} from \"../types/API\";\r\nimport {Sort} from \"../Components/searchForm\";\r\n\r\ninterface UnsplashState {\r\n    items: Array<Image>;\r\n    item: object;\r\n    total: number;\r\n    totalPages: number;\r\n    currentPage: number;\r\n}\r\n\r\nconst INITIAL_STATE={\r\n    items: [],\r\n    item: {},\r\n    total: 0,\r\n    totalPages: 0,\r\n    currentPage: 0,\r\n    searchInput: \"\",\r\n    filterInput: \"\",\r\n    radioInput: Sort.ASC\r\n};\r\n\r\nexport const unsplash = (state: UnsplashState = INITIAL_STATE, action: Action<ActionTypes, any>) => {\r\n    switch(action.type) {\r\n        case ActionTypes.SUBMIT:\r\n            return { ...state, ...action.payload };\r\n\r\n        case ActionTypes.FETCH:\r\n            const items = [...state.items, ...action.payload.items];\r\n            return { ...state, ...action.payload, items };\r\n\r\n        case ActionTypes.FILTER:\r\n            return { ...state, ...action.payload };\r\n\r\n        case ActionTypes.IMAGE:\r\n            return { ...state, item: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { unsplash } from \"./unsplash\";\r\n\r\nexport default combineReducers({\r\n    unsplash: unsplash\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers  from \"./reducers\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\n//@ts-ignore\r\nconst composedEnhancer = window.__REDUX_DEVTOOLS_EXTENSION__;\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    compose(\r\n        applyMiddleware(reduxThunk),\r\n        composedEnhancer(),\r\n    )\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App />\r\n        </HashRouter>\r\n    </Provider>, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/search-img.0e5b33d6.png\";","module.exports = __webpack_public_path__ + \"static/media/sort-amount-asc.dc84847d.svg\";","module.exports = __webpack_public_path__ + \"static/media/sort-amount-desc.66ea0c11.svg\";"],"sourceRoot":""}