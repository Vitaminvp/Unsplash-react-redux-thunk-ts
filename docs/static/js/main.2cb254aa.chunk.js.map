{"version":3,"sources":["img/search-img.png","img/sort-amount-asc.svg","img/sort-amount-desc.svg","actions/unsplash.ts","Components/gridItem/GridItem.tsx","configs/dev.config.ts","api/unsplash.ts","Components/input/Input.tsx","Components/button/Button.tsx","Components/searchForm/SearchForm.tsx","Components/radio/Radio.tsx","App.tsx","actions/submit.ts","actions/filter.ts","Components/grid/Grid.tsx","Components/nav/Nav.tsx","reducers/unsplash.ts","reducers/index.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","ActionTypes","GridItem","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","props","url","description","likes","link","classN","className","height","id","titleStyle","concat","react_default","a","createElement","href","style","src","alt","React","Component","config","options","axios","create","baseURL","headers","Authorization","getImages","_ref","asyncToGenerator","regenerator_default","mark","_callee","searchInput","currentPage","axiosConfig","response","_response$data","total","totalPages","items","wrap","_context","prev","next","params","query","page","get","sent","data","total_pages","results","abrupt","stop","_x","_x2","InputTypes","Button","children","classNames","objectWithoutProperties","classes","classnames","assign","Sort","Input","name","label","type","react","autoComplete","onFocus","e","currentTarget","Radio","checked","htmlFor","ButtonTypes","SearchForm","state","filterInput","radioInput","ASC","onFormChange","onChange","_this","_this$state","nextSearchInput","Array","from","elements","filter","element","reduce","acc","cur","objectSpread","defineProperty","setState","onSubmit","preventDefault","Input_Input","TEXT","Button_Button","SUBMIT","search","Radio_Radio","RADIO","desc","DESC","asc","SearchFormWrapper","connect","unsplash","dispatch","payload","FILTER","Grid","loadImages","onAddItems","filteredItems","toConsumableArray","item","alt_description","regex","RegExp","match","sortedItems","sort","b","Fragment","fallback","map","urls","GridItem_GridItem","small","length","BUTTON","onClick","PureComponent","GridWrapper","FETCH","Nav","Children","child","cloneElement","routes","title","path","exact","App","Nav_Nav","route","react_router_dom","to","react_router","render","routeProps","INITIAL_STATE","combineReducers","undefined","action","composedEnhancer","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","reducers","compose","applyMiddleware","reduxThunk","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0TCE5BC,mGCkBCC,eAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEY,IAAAC,EACqET,KAAKU,MAAtEC,EADJF,EACIE,IAAkBC,GADtBH,EACSI,MADTJ,EACgBK,KADhBL,EACsBG,aAAwBG,EAD9CN,EACmCO,UAAmBC,EADtDR,EACsDQ,OAAQC,EAD9DT,EAC8DS,GAC5DC,EAAa,CACfF,OAAM,GAAAG,OAAKH,EAAL,OAGV,OAAOI,EAAAC,EAAAC,cAAA,WAASP,UAAWD,GACvBM,EAAAC,EAAAC,cAAA,KAAGP,UAAU,QAAQQ,KAAI,WAAAJ,OAAaF,GAAMO,MAAON,GAAcP,GACjES,EAAAC,EAAAC,cAAA,OAAKP,UAAU,SACXK,EAAAC,EAAAC,cAAA,OAAKG,IAAKf,EAAKgB,IAAI,WAXnC/B,EAAA,CAA8BgC,IAAMC,mDCnBvBC,EACA,2BADAA,EAEC,mECERC,SAAWC,EAAMC,OAAO,CAC1BC,QAASJ,EACTK,QAAS,CACLC,cAAA,aAAAhB,OAA8BU,MAiBvBO,EAbC,eAAAC,EAAAxC,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAlB,EAAAmB,KAAG,SAAAC,EAAOC,EAAoBC,GAA3B,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAV,EAAAlB,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACTT,EAAc,CAChBU,OAAQ,CACJC,MAAOb,EACPc,KAAMb,IAJCQ,EAAAE,KAAA,EAOSvB,EAAQ2B,IAhBrB,iBAgBiDb,GAP7C,cAOTC,EAPSM,EAAAO,KAAAZ,EAQ4CD,EAASc,KAA5DZ,EAROD,EAQPC,MAAoBC,EARbF,EAQAc,YAAkCX,EARlCH,EAQyBe,QARzBV,EAAAW,OAAA,SASR,CAAEf,QAAOC,aAAYC,UATb,wBAAAE,EAAAY,SAAAtB,MAAH,gBAAAuB,EAAAC,GAAA,OAAA5B,EAAAnC,MAAAH,KAAAI,YAAA,aHVJT,iGAML,IIJKwE,2CCOCC,EAA0C,SAAA9B,GAAwC,IAArC+B,EAAqC/B,EAArC+B,SAAUC,EAA2BhC,EAA3BgC,WAAe5D,EAAYZ,OAAAyE,EAAA,EAAAzE,CAAAwC,EAAA,2BACrFkC,EAAUC,IAAW,MAAOH,GAClC,OAAOjD,EAAAC,EAAAC,cAAA,SAAAzB,OAAA4E,OAAA,CAAQ1D,UAAYwD,GAAc9D,GACrCW,EAAAC,EAAAC,cAAA,YAAO8C,6BDVHF,qGAgBL,IEDKQ,EFCCC,EAAyC,SAAAtC,GAA2B,IAAxBuC,EAAwBvC,EAAxBuC,KAAMC,EAAkBxC,EAAlBwC,MAAOC,EAAWzC,EAAXyC,KAElE,OAAOC,EAAA,qBAAKhE,UAAW,uBACfgE,EAAA,uBACIH,KAAMA,EACNE,KAAMA,EACN/D,UAAW,sBACXiE,aAAa,MACbC,QAAS,SAACC,GAAD,OAAMA,EAAEC,cAAc5E,MAAQ,MAE3CwE,EAAA,uBAAOhE,UAAU,uBAAuB8D,GACxCE,EAAA,sBAAMhE,UAAU,2BAAhB,QACAgE,EAAA,sBAAMhE,UAAU,qBAAhB,qEGhBCqE,SAAyC,SAAA/C,GAAwC,IAArCuC,EAAqCvC,EAArCuC,KAAMC,EAA+BxC,EAA/BwC,MAAOC,EAAwBzC,EAAxByC,KAAM7D,EAAkBoB,EAAlBpB,GAAIoE,EAAchD,EAAdgD,QACtEhB,EAAaG,IAAW,sBAAuB,sBAAuB,8BAC5E,OAAOO,EAAA,qBAAKhE,UAAWsD,GACXU,EAAA,uBAAO9D,GAAIA,EAAI6D,KAAMA,EAAMF,KAAMA,EAAMS,QAASA,IAChDN,EAAA,uBAAOO,QAASrE,GAAK4D,gBDDzBH,6CEZAa,EF+BNC,6MACFC,MAAQ,CACJ/C,YAAa,GACbgD,YAAa,GACbC,WAAYjB,EAAKkB,OAEbC,aAAe,SAACX,GAAuC,IACnDY,EAAaC,EAAKtF,MAAlBqF,SADmDE,EAEvBD,EAAKN,MAAjC/C,EAFmDsD,EAEnDtD,YAAaiD,EAFsCK,EAEtCL,WACfM,EAAkBf,EAAEC,cAAF,YAA+B5E,MAQjDA,EANS2F,MAAMC,KAAKjB,EAAEC,cAAciB,UAAUC,OAAO,SAACC,GACxD,OAAGA,GAAWA,EAAO,KACVA,EAAO,KAEX,OAEUC,OAAO,SAACC,EAAYC,GACrC,OAAGA,EAAI7B,KACa,eAAb6B,EAAI7B,MACgB,IAAhB6B,EAAIpB,QACIxF,OAAA6G,EAAA,EAAA7G,CAAA,GAAI2G,EAAX3G,OAAA8G,EAAA,EAAA9G,CAAA,GAAiB4G,EAAI7B,KAAO6B,EAAIxF,KAE7BuF,EAEA3G,OAAA6G,EAAA,EAAA7G,CAAA,GAAI2G,EAAX3G,OAAA8G,EAAA,EAAA9G,CAAA,GAAiB4G,EAAI7B,KAAO6B,EAAIlG,QAGjCiG,GACR,IAEHT,EAAKa,SAAS,SAAAnB,GAAK,OAAA5F,OAAA6G,EAAA,EAAA7G,CAAA,GAAS4F,EAAUlF,IAAS,WACxC0F,IAAoBvD,GACnBoD,EAASC,EAAKN,MAAMC,YAAaC,QAMrCkB,SAAW,SAAC3B,GAChBA,EAAE4B,iBADqD,IAEhDpE,EAAeqD,EAAKN,MAApB/C,YACJqD,EAAKtF,MAAMiC,cAAgBA,GAC1BqD,EAAKtF,MAAMoG,SAASnE,EAAa,4EAKrC,IAAM2B,EAAaG,IAAW,cAAe,eAC7C,OAAOO,EAAA,sBAAM8B,SAAU9G,KAAK8G,SAAW9F,UAAWsD,EAAYyB,SAAU/F,KAAK8F,cACrEd,EAAA,qBAAKhE,UAAW,UACZgE,EAAA,cAACgC,EAAD,CACInC,KAAM,cACNE,KAAQZ,EAAW8C,KACnBnC,MAAS,WAEbE,EAAA,cAACkC,EAAD,CAAQnC,KAAMS,EAAY2B,OAAQ7C,WAAY,cAA9C,IAA8DU,EAAA,qBAAKtD,IAAK0F,IAAQzF,IAAI,SAASX,UAAW,kBAE5GgE,EAAA,cAACgC,EAAD,CACInC,KAAM,cACNE,KAAQZ,EAAW8C,KACnBnC,MAAS,WAEbE,EAAA,qBAAKhE,UAAW,UACZgE,EAAA,cAACqC,EAAD,CACI/B,QAAUtF,KAAKU,MAAMkF,aAAejB,EAAKkB,IACzC3E,GAAI,OACJ2D,KAAM,aACNE,KAAQZ,EAAWmD,MACnBxC,MAASE,EAAA,qBAAKtD,IAAK6F,QAEvBvC,EAAA,cAACqC,EAAD,CACInG,GAAI,MACJoE,QAAUtF,KAAKU,MAAMkF,aAAejB,EAAK6C,KACzC3C,KAAM,aACNE,KAAQZ,EAAWmD,MACnBxC,MAASE,EAAA,qBAAKtD,IAAK+F,iBA5ElB7F,aAqGnB8F,EAAoBC,YAlBF,SAACjC,GACrB,MAAO,CACH/C,YAAa+C,EAAMkC,SAASjF,YAC5BiD,WAAYF,EAAMkC,SAAShC,aAIR,SAACiC,GACxB,MAAO,CACHf,SAAU,SAACnE,EAAqBC,GG9HV,IAACkF,EH+HpBD,GG/HoBC,EH+HK,CAACnF,cAAaC,eG9H9C,eAAAN,EAAAxC,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAlB,EAAAmB,KAAO,SAAAC,EAAOmF,GAAP,IAAA/E,EAAA,OAAAN,EAAAlB,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACoBjB,EAAUyF,EAAQnF,YAAamF,EAAQlF,aAD3D,OACGE,EADHM,EAAAO,KAEHkE,EAAS,CACL9C,KAAMpF,EAAYwH,OAClBW,QAAQhI,OAAA6G,EAAA,EAAA7G,CAAA,GAAKgD,EAAN,CAAgBH,YAAamF,EAAQnF,YAAaC,YAAakF,EAAQlF,gBAJ/E,wBAAAQ,EAAAY,SAAAtB,MAAP,gBAAAuB,GAAA,OAAA3B,EAAAnC,MAAAH,KAAAI,YAAA,MHgII2F,SAAU,SAACJ,EAAqBC,GInIL,IAACkC,EJoIxBD,GIpIwBC,EJoIK,CAACnC,cAAaC,cInI5C,SAACiC,GACJA,EAAS,CACL9C,KAAMpF,EAAYoI,OAClBD,QAASA,UJqIKH,CAGxBlC,GK1HIuC,6MAEMC,WAAa,WACjB,IAAMrF,EAAcoD,EAAKtF,MAAMkC,YAAc,EAC7CoD,EAAKtF,MAAMwH,WAAWlC,EAAKtF,MAAMiC,YAAaC,4EAGzC,IAAAnC,EAC4CT,KAAKU,MAA9CwC,EADHzC,EACGyC,MAAOF,EADVvC,EACUuC,MAAO2C,EADjBlF,EACiBkF,YAAaC,EAD9BnF,EAC8BmF,WAC7BuC,EAAgBrI,OAAAsI,EAAA,EAAAtI,CAAIoD,GAAOoD,OAAO,SAAA+B,GACpC,GAAIA,EAAKC,gBAAiB,CACtB,IAAMC,EAAQ,IAAIC,OAAO7C,EAAa,MACtC,OAAO0C,EAAKC,gBAAgBG,MAAMF,GAElC,OAAO,IAGTG,EAAc9C,IAAejB,EAAK6C,KAAOW,EAAcQ,KAAK,SAACrH,EAAOsH,GAAR,OAAsBA,EAAE/H,MAAQS,EAAET,OAAS,EAAI,IAAIsH,EAErH,OAAO9G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuH,SAAA,KACHxH,EAAAC,EAAAC,cAACyD,EAAA,SAAD,CAAU8D,SAAUzH,EAAAC,EAAAC,cAAA,0BAChBF,EAAAC,EAAAC,cAAA,OAAKP,UAAW,QAER0H,EAAYK,IAAI,SAAAV,GAAQ,IACbC,EAAoCD,EAApCC,gBAAiBU,EAAmBX,EAAnBW,KAAMnI,EAAawH,EAAbxH,MAAOK,EAAMmH,EAANnH,GACrC,OAAOG,EAAAC,EAAAC,cAAC0H,EAAD,CAAUjI,UAAW,aACXT,IAAKW,EAAIA,GAAIA,EACbP,IAAKqI,EAAKE,MACVtI,YAAa0H,EACbzH,MAAOA,QAKvCqC,EAAMiG,OAAS,GAAKnG,EAAQE,EAAMiG,OAC/B9H,EAAAC,EAAAC,cAAC2F,EAAD,CAAQlG,UAAU,gBAAgB+D,KAAMS,EAAY4D,OAAQC,QAASrJ,KAAKiI,YAA1E,aAAkGjF,EAAK,IAAA5B,OAAO8B,EAAMiG,OAAb,QAAA/H,OAA0B4B,EAA1B,KAAqC,IAC1I,aApCCpB,IAAM0H,eA6DnBC,EAAc5B,YAnBI,SAACjC,GACrB,MAAO,CACHxC,MAAOwC,EAAMkC,SAAS1E,MACtBF,MAAO0C,EAAMkC,SAAS5E,MACtBL,YAAa+C,EAAMkC,SAASjF,YAC5BgD,YAAaD,EAAMkC,SAASjC,YAC5B/C,YAAa8C,EAAMkC,SAAShF,YAC5BgD,WAAYF,EAAMkC,SAAShC,aAIR,SAACiC,GACxB,MAAO,CACHK,WAAY,SAACvF,EAAqBC,GXnEhB,IAACkF,EWoEfD,GXpEeC,EWoEM,CAACnF,cAAaC,eXnE3C,eAAAN,EAAAxC,OAAAyC,EAAA,EAAAzC,CAAA0C,EAAAlB,EAAAmB,KAAO,SAAAC,EAAOmF,GAAP,IAAA/E,EAAA,OAAAN,EAAAlB,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACoBjB,EAAUyF,EAAQnF,YAAamF,EAAQlF,aAD3D,OACGE,EADHM,EAAAO,KAEHkE,EAAS,CACL9C,KAAMpF,EAAY6J,MAClB1B,QAAQhI,OAAA6G,EAAA,EAAA7G,CAAA,GAAKgD,EAAN,CAAgBH,YAAamF,EAAQnF,YAAaC,YAAakF,EAAQlF,gBAJ/E,wBAAAQ,EAAAY,SAAAtB,MAAP,gBAAAuB,GAAA,OAAA3B,EAAAnC,MAAAH,KAAAI,YAAA,QWwEgBuH,CAGlBK,GChFWyB,SAAoC,SAAAnH,GAAgB,IAAd+B,EAAc/B,EAAd+B,SAE/C,OAAOhD,EAAAC,EAAAC,cAAA,OAAKP,UAAW,OACnBK,EAAAC,EAAAC,cAAA,MAAIP,UAAW,YACVY,IAAM8H,SAASX,IAAoB1E,EAAS,SAACsF,GAAD,OAAetI,EAAAC,EAAAC,cAAA,UAAKK,IAAMgI,aAAaD,OAGpFtI,EAAAC,EAAAC,cAAA,OAAKP,UAAW,kBACZK,EAAAC,EAAAC,cAACmG,EAAD,CAAa1G,UAAU,kDJL3BwE,mDAIZ,IAAMqE,EAAS,CACb,CACEC,MAAO,OACPC,KAAM,IACNC,OAAO,EACPtJ,MAAO,CACLoJ,MAAO,IAETjI,UAAWmG,GAEb,CACE8B,MAAO,QACPC,KAAM,SACNlI,UAAW,kBAAMR,EAAAC,EAAAC,cAAA,yBAEnB,CAEEwI,KAAM,aACNlI,UAAW,SAACnB,GAAD,OAA4CW,EAAAC,EAAAC,cAAA,qBAAab,EAAM+H,MAAOlF,OAAOrC,OA4B7E+I,mLApBX,OAAO5I,EAAAC,EAAAC,cAAA,OAAKP,UAAW,eACrBK,EAAAC,EAAAC,cAAC2I,EAAD,KAEIL,EAAOd,IAAI,SAAAoB,GAAK,OAAI9I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAM7J,IAAK4J,EAAML,MAAOO,GAAIF,EAAMJ,MAAOI,EAAML,UAIrED,EAAOd,IAAI,SAAAzG,GAAA,IAAEyH,EAAFzH,EAAEyH,KAAMC,EAAR1H,EAAQ0H,MAAOnI,EAAfS,EAAeT,UAAWiI,EAA1BxH,EAA0BwH,MAA1BxH,EAAiC5B,MAAjC,OACPW,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CACE/J,IAAKuJ,EACLC,KAAMA,EACNC,MAAOA,EACPO,OAAS,SAACC,GAAD,OAAgBnJ,EAAAC,EAAAC,cAACM,EAAc2I,gBAhBpC3I,qBKrBZ4I,EAAc,CAChBvH,MAAO,GACPF,MAAO,EACPC,WAAY,EACZL,YAAa,EACbD,YAAa,GACbgD,YAAa,GACbC,WAAYjB,EAAK6C,MCfNkD,cAAgB,CAC3B9C,SDiBoB,WAA4E,IAA3ElC,EAA2EtF,UAAA+I,OAAA,QAAAwB,IAAAvK,UAAA,GAAAA,UAAA,GAApDqK,EAAeG,EAAqCxK,UAAA+I,OAAA,EAAA/I,UAAA,QAAAuK,EAChG,OAAOC,EAAO7F,MACV,KAAKpF,EAAYwH,OACb,OAAOrH,OAAA6G,EAAA,EAAA7G,CAAA,GAAK4F,EAAUkF,EAAO9C,SAEjC,KAAKnI,EAAY6J,MACb,IAAMtG,EAAK,GAAA9B,OAAAtB,OAAAsI,EAAA,EAAAtI,CAAO4F,EAAMxC,OAAbpD,OAAAsI,EAAA,EAAAtI,CAAuB8K,EAAO9C,QAAQ5E,QACjD,OAAOpD,OAAA6G,EAAA,EAAA7G,CAAA,GAAK4F,EAAUkF,EAAO9C,QAA7B,CAAsC5E,UAE1C,KAAKvD,EAAYoI,OACb,OAAOjI,OAAA6G,EAAA,EAAA7G,CAAA,GAAK4F,EAAUkF,EAAO9C,SAEjC,QACI,OAAOpC,cExBbmF,GAAmBC,OAAOC,6BAE1BC,GAAQC,YACVC,EACAC,YACIC,YAAgBC,KAChBR,OAKRS,IAASf,OACLlJ,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAAUP,MAAOA,IACb3J,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,KACI/I,EAAAC,EAAAC,cAACiK,EAAD,QAEKC,SAASC,eAAe","file":"static/js/main.2cb254aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search-img.0e5b33d6.png\";","module.exports = __webpack_public_path__ + \"static/media/sort-amount-asc.3e640fee.svg\";","module.exports = __webpack_public_path__ + \"static/media/sort-amount-desc.19227a1e.svg\";","import getImages from \"../api\";\r\n\r\nexport enum ActionTypes {\r\n    FETCH = '@unsplash/fetch',\r\n    FILTER = '@unsplash/filter',\r\n    SUBMIT = '@unsplash/submit'\r\n}\r\n\r\nexport const fetchItems = (payload: {searchInput: string, currentPage: number}):any  => {\r\n    return async (dispatch:any) => {\r\n        const response = await getImages(payload.searchInput, payload.currentPage);\r\n        dispatch({\r\n            type: ActionTypes.FETCH,\r\n            payload: {...response, searchInput: payload.searchInput, currentPage: payload.currentPage}\r\n        });\r\n    };\r\n};","import React from \"react\";\r\n//import {SyntheticEvent} from \"react\";\r\nimport \"./GridItem.scss\";\r\n\r\n\r\n\r\ninterface IProps {\r\n    url: string,\r\n    id: string,\r\n    description: string,\r\n    likes: number,\r\n    link?: string,\r\n    height?: number,\r\n    className?: string\r\n}\r\n\r\ninterface IState {\r\n    value: string,\r\n}\r\n\r\nexport class GridItem extends React.Component<IProps, IState>{\r\n\r\n    render(){\r\n        const { url, likes, link, description, className: classN, height, id } = this.props;\r\n        const titleStyle = {\r\n            height: `${height}px`,\r\n        };\r\n\r\n        return <article className={classN}>\r\n            <a className=\"title\" href={`#/image/${id}`} style={titleStyle}>{ description }</a>\r\n            <div className=\"image\">\r\n                <img src={url} alt=\"\" />\r\n            </div>\r\n        </article>\r\n    }\r\n}","\r\nexport const config = {\r\n    baseURL: 'https://api.unsplash.com',\r\n    clientId: '995142b5e2f546f4eac828d832606dfba0beaef27d62d77a1ff8cce9ba2bacac'\r\n};\r\n","import axios from \"axios\";\r\nimport { config } from \"../configs/\"\r\nimport {SearchResponse} from \"../types/API\";\r\nconst apiUrl = '/search/photos';\r\n\r\nconst options =  axios.create({\r\n    baseURL: config.baseURL,\r\n    headers: {\r\n        'Authorization': `Client-ID ${config.clientId}`\r\n    }\r\n});\r\n\r\nconst  getImages = async (searchInput:string, currentPage: number) => {\r\n    const axiosConfig = {\r\n        params: {\r\n            query: searchInput,\r\n            page: currentPage\r\n        }\r\n    };\r\n    const response =  await options.get<SearchResponse>(apiUrl, axiosConfig);\r\n    const { total, total_pages: totalPages, results: items} =  response.data;\r\n    return { total, totalPages, items};\r\n\r\n};\r\n\r\nexport default getImages;","import * as React from \"react\";\r\nimport {SyntheticEvent} from \"react\";\r\nimport \"./Input.scss\";\r\n\r\nexport enum InputTypes {\r\n    TEXT = 'text',\r\n    RADIO = 'radio',\r\n    NUMBER = 'number',\r\n    PASSWORD = 'password',\r\n    PHONE = 'phone'\r\n}\r\n\r\ninterface IProps {\r\n    type: InputTypes,\r\n    value?: string,\r\n    onChange?: (value: string, name: string) => void\r\n    name: string\r\n    label: string\r\n}\r\n\r\nexport const Input: React.FunctionComponent<IProps> = ({ name, label, type }) => {\r\n\r\n    return <div className={'input__native-group'}>\r\n            <input\r\n                name={name}\r\n                type={type}\r\n                className={'input__native-input'}\r\n                autoComplete=\"off\"\r\n                onFocus={(e)=> e.currentTarget.value = ''}\r\n            />\r\n            <label className=\"input__native-label\">{label}</label>\r\n            <span className=\"input__native-highlight\">&nbsp;</span>\r\n            <span className=\"input__native-bar\">&nbsp;</span>\r\n        </div>\r\n};","import React, {ButtonHTMLAttributes} from \"react\";\r\nimport './Button.scss';\r\nimport classnames from \"classnames\";\r\nimport {ButtonTypes} from \"../../App\";\r\n\r\n\r\ninterface IProps extends  ButtonHTMLAttributes<HTMLButtonElement>{\r\n    classNames?: string,\r\n    type?: ButtonTypes\r\n}\r\n\r\nexport const Button: React.FunctionComponent<IProps> = ({ children, classNames, ...props }) => {\r\n    const classes = classnames('btn', classNames);\r\n    return <button className={ classes } {...props}>\r\n        <span>{children}</span>\r\n    </button>\r\n};","import * as React from \"react\";\r\nimport {Input, InputTypes} from \"../input\";\r\nimport {SyntheticEvent} from \"react\";\r\nimport \"./SearchForm.scss\";\r\nimport classnames from \"classnames\";\r\nimport {Button} from \"../button\";\r\nimport {ButtonTypes} from \"../../App\";\r\n// @ts-ignore\r\nimport search from \"../../img/search-img.png\";\r\n// @ts-ignore\r\nimport asc from \"../../img/sort-amount-asc.svg\";\r\n// @ts-ignore\r\nimport desc from \"../../img/sort-amount-desc.svg\";\r\nimport {Radio} from \"../radio\";\r\nimport {filterActionCreator} from \"../../actions/filter\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchInitItems} from \"../../actions/submit\";\r\n\r\n\r\nexport enum Sort {\r\n    ASC = 'asc',\r\n    DESC = 'desc'\r\n}\r\ninterface Props {\r\n    onSubmit: (searchInput: string, currentPage: number) => void;\r\n    onChange: (filterInput: string, radioInput: string) => void;\r\n    className: string;\r\n    searchInput: string;\r\n    radioInput: string;\r\n\r\n}\r\ninterface State {\r\n    searchInput: string;\r\n    filterInput: string;\r\n    radioInput: string;\r\n}\r\n\r\n\r\nclass SearchForm extends React.Component<Props, State>{\r\n    state = {\r\n        searchInput: '',\r\n        filterInput: '',\r\n        radioInput: Sort.ASC\r\n    };\r\n    private onFormChange = (e: SyntheticEvent<HTMLFormElement>) => {\r\n        const { onChange } = this.props;\r\n        const { searchInput, radioInput } = this.state;\r\n        const nextSearchInput = e.currentTarget['searchInput'].value;\r\n\r\n        const inputs = Array.from(e.currentTarget.elements).filter((element:any) => {\r\n            if(element && element['name']){\r\n                return element['name'];\r\n            }\r\n            return null;\r\n        });\r\n        const value = inputs.reduce((acc:object, cur:any) => {\r\n            if(cur.name){\r\n                if(cur.name === 'radioInput'){\r\n                    if(cur.checked === true){\r\n                        return {...acc, [cur.name]: cur.id};\r\n                    }\r\n                    return acc;\r\n                }else{\r\n                    return {...acc, [cur.name]: cur.value};\r\n                }\r\n            }\r\n            return acc;\r\n        }, {});\r\n\r\n        this.setState(state => ({...state, ...value}), () => {\r\n            if(nextSearchInput === searchInput){\r\n                onChange(this.state.filterInput, radioInput);\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    private onSubmit = (e: SyntheticEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const {searchInput} = this.state;\r\n        if(this.props.searchInput !== searchInput){\r\n            this.props.onSubmit(searchInput, 1);\r\n        }\r\n    };\r\n\r\n    render(){\r\n        const classNames = classnames('search-form', 'native-form');\r\n        return <form onSubmit={this.onSubmit}  className={classNames} onChange={this.onFormChange} >\r\n                <div className={'search'}>\r\n                    <Input\r\n                        name={'searchInput'}\r\n                        type = {InputTypes.TEXT}\r\n                        label = {'Search'}\r\n                    />\r\n                    <Button type={ButtonTypes.SUBMIT} classNames={'btn-search'} > <img src={search} alt=\"Search\" className={'icon-search'} /></Button>\r\n                </div>\r\n                <Input\r\n                    name={'filterInput'}\r\n                    type = {InputTypes.TEXT}\r\n                    label = {'Filter'}\r\n                />\r\n                <div className={'search'}>\r\n                    <Radio\r\n                        checked={ this.props.radioInput === Sort.ASC }\r\n                        id={'desc'}\r\n                        name={'radioInput'}\r\n                        type = {InputTypes.RADIO}\r\n                        label = {<img src={desc} />}\r\n                    />\r\n                    <Radio\r\n                        id={'asc'}\r\n                        checked={ this.props.radioInput === Sort.DESC }\r\n                        name={'radioInput'}\r\n                        type = {InputTypes.RADIO}\r\n                        label = {<img src={asc} />}\r\n                    />\r\n                </div>\r\n            </form>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        searchInput: state.unsplash.searchInput,\r\n        radioInput: state.unsplash.radioInput\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        onSubmit: (searchInput: string, currentPage: number) => {\r\n           dispatch(fetchInitItems( {searchInput, currentPage}))\r\n        },\r\n        onChange: (filterInput: string, radioInput: string) => {\r\n            dispatch(filterActionCreator({filterInput, radioInput}))\r\n        }\r\n    }\r\n};\r\n\r\nconst SearchFormWrapper = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SearchForm);\r\n\r\nexport {SearchFormWrapper as SearchForm};","import * as React from \"react\";\r\nimport \"./Radio.scss\";\r\nimport {InputTypes} from \"../input\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\ninterface IProps {\r\n    type: InputTypes,\r\n    value?: string,\r\n    onChange?: (value: string, name: string) => void\r\n    name?: string\r\n    label?: any\r\n    id?: string\r\n    checked: boolean\r\n}\r\n\r\nexport const Radio: React.FunctionComponent<IProps> = ({ name, label, type, id, checked }) => {\r\n    const classNames = classnames('input__native-group', 'input__native-radio', 'input__native-radio-inline')\r\n    return <div className={classNames}>\r\n                <input id={id} type={type} name={name} checked={checked} />\r\n                <label htmlFor={id}>{label}</label>\r\n        </div>\r\n};","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport {Grid} from \"./Components/grid\";\r\nimport {Nav} from \"./Components/nav\";\r\nimport {Route, RouteChildrenProps, Router} from \"react-router\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport enum ButtonTypes {\r\n  SUBMIT = 'submit',\r\n  BUTTON = 'button'\r\n}\r\nconst routes = [\r\n  {\r\n    title: 'home',\r\n    path: '/',\r\n    exact: true,\r\n    props: {\r\n      title: ''\r\n    },\r\n    Component: Grid\r\n  },\r\n  {\r\n    title: 'about',\r\n    path: '/about',\r\n    Component: () => <h1>Some text</h1>\r\n  },\r\n  {\r\n    //title: 'Images',\r\n    path: '/image/:id',\r\n    Component: (props: RouteChildrenProps<{id:string}>) => <h1>Details {props.match!.params.id}</h1>\r\n  }\r\n];\r\n\r\nclass App extends Component<{}, {}> {\r\n\r\n\r\n  render() {\r\n    return <div className={'app-wrapper'}>\r\n      <Nav>\r\n        {\r\n          routes.map(route => <Link key={route.title} to={route.path}>{route.title}</Link>)\r\n        }\r\n      </Nav>\r\n      {\r\n        routes.map(({path, exact, Component, title, props}) =>(\r\n            <Route\r\n              key={title}\r\n              path={path}\r\n              exact={exact}\r\n              render={ (routeProps) => <Component {...routeProps} /> }\r\n            />\r\n        ))\r\n      }\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import getImages from \"../api\";\r\nimport {ActionTypes} from \"./unsplash\";\r\n\r\n\r\nexport const fetchInitItems = (payload: {searchInput: string, currentPage: number}):any  => {\r\n    return async (dispatch:any) => {\r\n        const response = await getImages(payload.searchInput, payload.currentPage);\r\n        dispatch({\r\n            type: ActionTypes.SUBMIT,\r\n            payload: {...response, searchInput: payload.searchInput, currentPage: payload.currentPage}\r\n        });\r\n    };\r\n};","import {ActionTypes} from \"./unsplash\";\r\n\r\nexport const filterActionCreator = (payload: {filterInput: string, radioInput: string}):any  => {\r\n    return (dispatch:any) => {\r\n        dispatch({\r\n            type: ActionTypes.FILTER,\r\n            payload: payload\r\n        });\r\n    };\r\n};","import React, {Suspense} from \"react\";\r\nimport {Image} from '../../types/API';\r\nimport './Grid.scss';\r\nimport {GridItem} from \"../gridItem\";\r\nimport {fetchItems} from \"../../actions/unsplash\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button} from \"../button\";\r\nimport {ButtonTypes} from \"../../App\";\r\nimport {Sort} from \"../searchForm\";\r\n\r\ninterface Props {\r\n    items: Array<Image>;\r\n    total: number;\r\n    filterInput: string;\r\n    currentPage: number;\r\n    searchInput: string;\r\n    radioInput: string;\r\n    onAddItems: (searchInput: string, currentPage: number)=> void;\r\n}\r\n\r\nclass Grid extends React.PureComponent<Props, {}> {\r\n\r\n    private loadImages = () => {\r\n        const currentPage = this.props.currentPage + 1;\r\n        this.props.onAddItems(this.props.searchInput, currentPage)\r\n    };\r\n\r\n    render() {\r\n        const { items, total, filterInput, radioInput} = this.props;\r\n        const filteredItems = [...items].filter(item => {\r\n            if (item.alt_description) {\r\n                const regex = new RegExp(filterInput, 'gi');\r\n                return item.alt_description.match(regex);\r\n            } else {\r\n                return true;\r\n            }\r\n        });\r\n        const sortedItems = radioInput === Sort.DESC ? filteredItems.sort((a:any, b:any):any => b.likes - a.likes ? -1 : 1): filteredItems;\r\n\r\n        return <>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n                <div className={'grid'}>\r\n                    {\r\n                        sortedItems.map(item => {\r\n                            const {alt_description, urls, likes, id} = item;\r\n                            return <GridItem className={'grid__item'}\r\n                                             key={id} id={id}\r\n                                             url={urls.small}\r\n                                             description={alt_description}\r\n                                             likes={likes}/>\r\n                        })\r\n                    }\r\n                </div>\r\n            </Suspense>\r\n            {items.length > 0 && total > items.length?\r\n                <Button className=\"native-button\" type={ButtonTypes.BUTTON} onClick={this.loadImages} >Show more {total ? `(${items.length} of ${total})` : ''}</Button>\r\n                : null\r\n            }\r\n            </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        items: state.unsplash.items,\r\n        total: state.unsplash.total,\r\n        searchInput: state.unsplash.searchInput,\r\n        filterInput: state.unsplash.filterInput,\r\n        currentPage: state.unsplash.currentPage,\r\n        radioInput: state.unsplash.radioInput,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        onAddItems: (searchInput: string, currentPage: number) => {\r\n            dispatch(fetchItems( {searchInput, currentPage}))\r\n        }\r\n    }\r\n};\r\n\r\nconst GridWrapper = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Grid);\r\n\r\nexport {GridWrapper as Grid};\r\n\r\n","import React, {ReactNode} from \"react\";\r\nimport './Nav.scss';\r\nimport { SearchForm } from \"../searchForm\";\r\n\r\nexport const Nav: React.FunctionComponent<any> = ({children}) => {\r\n\r\n    return <nav className={'nav'}>\r\n        <ul className={'nav-menu'}>\r\n            {React.Children.map<ReactNode, any>(children,(child:any) => <li>{React.cloneElement(child)}</li>)}\r\n        </ul>\r\n\r\n            <div className={'nav__container'}>\r\n                <SearchForm  className='nav__search-form'/>\r\n            </div>\r\n        </nav>;\r\n};","import {Action} from \"../types/action\";\r\nimport {ActionTypes} from \"../actions/unsplash\";\r\nimport {Image} from \"../types/API\";\r\nimport {Sort} from \"../Components/searchForm\";\r\n\r\ninterface UnsplashState {\r\n    items: Array<Image>;\r\n    total: number;\r\n    totalPages: number;\r\n    currentPage: number;\r\n}\r\n\r\nconst INITIAL_STATE={\r\n    items: [],\r\n    total: 0,\r\n    totalPages: 0,\r\n    currentPage: 0,\r\n    searchInput: \"\",\r\n    filterInput: \"\",\r\n    radioInput: Sort.DESC\r\n};\r\n\r\nexport const unsplash = (state: UnsplashState = INITIAL_STATE, action: Action<ActionTypes, any>) => {\r\n    switch(action.type) {\r\n        case ActionTypes.SUBMIT:\r\n            return { ...state, ...action.payload };\r\n\r\n        case ActionTypes.FETCH:\r\n            const items = [...state.items, ...action.payload.items];\r\n            return { ...state, ...action.payload, items };\r\n\r\n        case ActionTypes.FILTER:\r\n            return { ...state, ...action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { unsplash } from \"./unsplash\";\r\n\r\nexport default combineReducers({\r\n    unsplash: unsplash\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers  from \"./reducers\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\n//@ts-ignore\r\nconst composedEnhancer = window.__REDUX_DEVTOOLS_EXTENSION__;\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    compose(\r\n        applyMiddleware(reduxThunk),\r\n        composedEnhancer(),\r\n    )\r\n);\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App />\r\n        </HashRouter>\r\n    </Provider>, document.getElementById('root'));\r\n"],"sourceRoot":""}